apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        resources:
          limits:
            memory: "1Gi"
            cpu: "250m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: rootpass
        - name: MYSQL_DATABASE
          value: demo
        - name: MYSQL_ROOT_HOST
          value: "%"
        ports:
        - containerPort: 3306
        volumeMounts:
        # - mountPath: /var/lib/mysql
        #   name: mysql-data
        - mountPath: /docker-entrypoint-initdb.d/init_db.sql
          subPath: init_db.sql
          name: init-script
      volumes:
      # - name: mysql-data
      #   persistentVolumeClaim:
      #     claimName: mysql-pvc
      - name: init-script
        configMap:
          name: mysql-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-db
spec:
  type: ClusterIP
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql-db

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mysql-pvc
# spec:
#   accessModes:
#   - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
data:
  init_db.sql: |
    -- Crear la tabla 'products' si no existe
    CREATE TABLE IF NOT EXISTS products (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        price DECIMAL(10, 2) NOT NULL
    );

    -- Insertar algunos productos de ejemplo
    INSERT INTO products (name, price) VALUES ('Producto 1', 10.99);
    INSERT INTO products (name, price) VALUES ('Producto 2', 15.49);
    INSERT INTO products (name, price) VALUES ('Producto 3', 7.99);
